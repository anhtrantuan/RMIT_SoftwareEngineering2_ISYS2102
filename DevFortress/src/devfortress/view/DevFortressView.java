/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package devfortress.view;

import devfortress.model.DateTime;
import devfortress.model.facade.Model;
import devfortress.utilities.Constant;
import devfortress.view.editors.TableButtonCellEditor;
import devfortress.view.models.EmployeeTableModel;
import devfortress.view.models.ExpensesTreeModel;
import devfortress.view.models.ProjectsTreeModel;
import devfortress.view.renderers.ExpensesTreeCellRenderer;
import devfortress.view.renderers.ProjectsTreeCellRenderer;
import devfortress.view.renderers.TableButtonCellRenderer;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionListener;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JButton;
import javax.swing.JCheckBox;

/**
 *
 * @author tommy
 */
public class DevFortressView extends javax.swing.JFrame implements View, Observer {

    private Model model;
    private ActionListener employeeTableButtonListener = null;

    /**
     * Creates new form DevFortressView.
     *
     * @param model
     */
    public DevFortressView(Model model) {
        this.model = model;

        /* Initialize components. */
        initComponents();

        /* Populate data for trees and tables. */
        populateData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlStatusBar = new javax.swing.JPanel();
        lblStatus = new javax.swing.JLabel();
        scpManagement = new javax.swing.JScrollPane();
        pnlManagement = new javax.swing.JPanel();
        pnlSystemButtonHolder = new javax.swing.JPanel();
        btnSystem = new javax.swing.JButton();
        rigidArea1 = new javax.swing.Box.Filler(new java.awt.Dimension(100, 10), new java.awt.Dimension(100, 10), new java.awt.Dimension(100, 10));
        pnlStatusAndProjects = new javax.swing.JPanel();
        pnlStatus = new javax.swing.JPanel();
        pnlDuration = new javax.swing.JPanel();
        lblDuration = new javax.swing.JLabel();
        pnlBudget = new javax.swing.JPanel();
        lblBudget = new javax.swing.JLabel();
        scpExpenses = new javax.swing.JScrollPane();
        treExpenses = new javax.swing.JTree();
        pnlEmployees = new javax.swing.JPanel();
        lblEmployees = new javax.swing.JLabel();
        rigidArea2 = new javax.swing.Box.Filler(new java.awt.Dimension(100, 10), new java.awt.Dimension(100, 10), new java.awt.Dimension(100, 10));
        pnlProjects = new javax.swing.JPanel();
        scpProjects = new javax.swing.JScrollPane();
        treProjects = new javax.swing.JTree();
        pnlBlank = new javax.swing.JPanel();
        scpDevelopers = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();
        pnlLogAndControl = new javax.swing.JPanel();
        scpLogPane = new javax.swing.JScrollPane();
        txaLog = new javax.swing.JTextArea();
        sppControl = new javax.swing.JSplitPane();
        pnlSystemControl = new javax.swing.JPanel();
        btnInformation = new javax.swing.JButton();
        btnCurrentProjects = new javax.swing.JButton();
        pnlTurnControl = new javax.swing.JPanel();
        btnNextTurn = new javax.swing.JButton();
        menu = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuFile_Exit = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();
        menuEdit_Preferences = new javax.swing.JMenuItem();
        menuView = new javax.swing.JMenu();
        menuView_Summary = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();
        menuHelp_About = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DevFortress");
        setResizable(false);

        pnlStatusBar.setBackground(new java.awt.Color(255, 255, 255));
        pnlStatusBar.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), javax.swing.BorderFactory.createEmptyBorder(0, 6, 0, 6)));
        pnlStatusBar.setPreferredSize(new java.awt.Dimension(1024, 23));

        lblStatus.setBackground(new java.awt.Color(255, 255, 255));
        lblStatus.setText("Status");

        javax.swing.GroupLayout pnlStatusBarLayout = new javax.swing.GroupLayout(pnlStatusBar);
        pnlStatusBar.setLayout(pnlStatusBarLayout);
        pnlStatusBarLayout.setHorizontalGroup(
            pnlStatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 1008, Short.MAX_VALUE)
        );
        pnlStatusBarLayout.setVerticalGroup(
            pnlStatusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
        );

        scpManagement.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        scpManagement.setPreferredSize(new java.awt.Dimension(0, 0));

        pnlManagement.setBackground(new java.awt.Color(255, 255, 255));
        pnlManagement.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        pnlManagement.setMinimumSize(new java.awt.Dimension(0, 0));
        pnlManagement.setPreferredSize(new java.awt.Dimension(0, 0));
        pnlManagement.setLayout(new javax.swing.BoxLayout(pnlManagement, javax.swing.BoxLayout.Y_AXIS));

        pnlSystemButtonHolder.setBackground(new java.awt.Color(255, 255, 255));
        pnlSystemButtonHolder.setMaximumSize(new java.awt.Dimension(32767, 50));
        pnlSystemButtonHolder.setMinimumSize(new java.awt.Dimension(0, 50));
        pnlSystemButtonHolder.setPreferredSize(new java.awt.Dimension(0, 50));

        btnSystem.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        btnSystem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/devfortress/view/resources/icSystem.png"))); // NOI18N
        btnSystem.setText(Constant.BUTTON_SYSTEM);
        btnSystem.setMaximumSize(new java.awt.Dimension(126, 50));
        btnSystem.setMinimumSize(new java.awt.Dimension(126, 50));
        btnSystem.setPreferredSize(new java.awt.Dimension(126, 50));

        javax.swing.GroupLayout pnlSystemButtonHolderLayout = new javax.swing.GroupLayout(pnlSystemButtonHolder);
        pnlSystemButtonHolder.setLayout(pnlSystemButtonHolderLayout);
        pnlSystemButtonHolderLayout.setHorizontalGroup(
            pnlSystemButtonHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnSystem, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
        );
        pnlSystemButtonHolderLayout.setVerticalGroup(
            pnlSystemButtonHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSystemButtonHolderLayout.createSequentialGroup()
                .addComponent(btnSystem, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pnlManagement.add(pnlSystemButtonHolder);
        pnlManagement.add(rigidArea1);

        pnlStatusAndProjects.setBackground(new java.awt.Color(255, 255, 255));
        pnlStatusAndProjects.setLayout(new javax.swing.BoxLayout(pnlStatusAndProjects, javax.swing.BoxLayout.Y_AXIS));

        pnlStatus.setBackground(new java.awt.Color(255, 255, 255));
        pnlStatus.setBorder(javax.swing.BorderFactory.createTitledBorder("Status"));
        pnlStatus.setMinimumSize(new java.awt.Dimension(0, 0));
        pnlStatus.setPreferredSize(new java.awt.Dimension(0, 210));
        pnlStatus.setLayout(new javax.swing.BoxLayout(pnlStatus, javax.swing.BoxLayout.Y_AXIS));

        pnlDuration.setBackground(new java.awt.Color(255, 255, 255));
        pnlDuration.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 6, 6, 6));
        pnlDuration.setMaximumSize(new java.awt.Dimension(32767, 36));
        pnlDuration.setMinimumSize(new java.awt.Dimension(0, 36));
        pnlDuration.setPreferredSize(new java.awt.Dimension(0, 36));

        lblDuration.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        lblDuration.setIcon(new javax.swing.ImageIcon(getClass().getResource("/devfortress/view/resources/icDuration.png"))); // NOI18N
        lblDuration.setText("Duration");

        javax.swing.GroupLayout pnlDurationLayout = new javax.swing.GroupLayout(pnlDuration);
        pnlDuration.setLayout(pnlDurationLayout);
        pnlDurationLayout.setHorizontalGroup(
            pnlDurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblDuration, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
        );
        pnlDurationLayout.setVerticalGroup(
            pnlDurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblDuration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnlStatus.add(pnlDuration);

        pnlBudget.setBackground(new java.awt.Color(255, 255, 255));
        pnlBudget.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 6, 6, 6));
        pnlBudget.setMaximumSize(new java.awt.Dimension(32767, 36));
        pnlBudget.setMinimumSize(new java.awt.Dimension(0, 36));
        pnlBudget.setPreferredSize(new java.awt.Dimension(0, 36));

        lblBudget.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        lblBudget.setIcon(new javax.swing.ImageIcon(getClass().getResource("/devfortress/view/resources/icBudget.png"))); // NOI18N
        lblBudget.setText("Budget");

        javax.swing.GroupLayout pnlBudgetLayout = new javax.swing.GroupLayout(pnlBudget);
        pnlBudget.setLayout(pnlBudgetLayout);
        pnlBudgetLayout.setHorizontalGroup(
            pnlBudgetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblBudget, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
        );
        pnlBudgetLayout.setVerticalGroup(
            pnlBudgetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblBudget, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnlStatus.add(pnlBudget);

        scpExpenses.setBackground(new java.awt.Color(255, 255, 255));
        scpExpenses.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 6, 6, 6));
        scpExpenses.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        scpExpenses.setMinimumSize(new java.awt.Dimension(0, 42));
        scpExpenses.setPreferredSize(new java.awt.Dimension(14, 42));

        treExpenses.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        treExpenses.setModel(new ExpensesTreeModel(null));
        treExpenses.setCellRenderer(new ExpensesTreeCellRenderer());
        treExpenses.setMaximumSize(new java.awt.Dimension(166, 32779));
        treExpenses.setMinimumSize(new java.awt.Dimension(0, 30));
        treExpenses.setPreferredSize(new java.awt.Dimension(0, 30));
        treExpenses.setRowHeight(30);
        treExpenses.setSelectionModel(null);
        treExpenses.addTreeExpansionListener(new javax.swing.event.TreeExpansionListener() {
            public void treeExpanded(javax.swing.event.TreeExpansionEvent evt) {
                treeExpansion(evt);
            }
            public void treeCollapsed(javax.swing.event.TreeExpansionEvent evt) {
                treeExpansion(evt);
            }
        });
        scpExpenses.setViewportView(treExpenses);

        pnlStatus.add(scpExpenses);

        pnlEmployees.setBackground(new java.awt.Color(255, 255, 255));
        pnlEmployees.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 6, 6, 6));
        pnlEmployees.setMaximumSize(new java.awt.Dimension(32767, 36));
        pnlEmployees.setPreferredSize(new java.awt.Dimension(0, 36));

        lblEmployees.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        lblEmployees.setIcon(new javax.swing.ImageIcon(getClass().getResource("/devfortress/view/resources/icEmployees.png"))); // NOI18N
        lblEmployees.setText("Employees");
        lblEmployees.setPreferredSize(new java.awt.Dimension(0, 24));

        javax.swing.GroupLayout pnlEmployeesLayout = new javax.swing.GroupLayout(pnlEmployees);
        pnlEmployees.setLayout(pnlEmployeesLayout);
        pnlEmployeesLayout.setHorizontalGroup(
            pnlEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblEmployees, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
        );
        pnlEmployeesLayout.setVerticalGroup(
            pnlEmployeesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblEmployees, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnlStatus.add(pnlEmployees);

        pnlStatusAndProjects.add(pnlStatus);
        pnlStatusAndProjects.add(rigidArea2);

        pnlProjects.setBackground(new java.awt.Color(255, 255, 255));
        pnlProjects.setBorder(javax.swing.BorderFactory.createTitledBorder("Projects"));
        pnlProjects.setMinimumSize(new java.awt.Dimension(0, 42));
        pnlProjects.setPreferredSize(new java.awt.Dimension(0, 42));
        pnlProjects.setLayout(new javax.swing.BoxLayout(pnlProjects, javax.swing.BoxLayout.Y_AXIS));

        scpProjects.setBackground(new java.awt.Color(255, 255, 255));
        scpProjects.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 6, 6, 6));
        scpProjects.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        scpProjects.setMinimumSize(new java.awt.Dimension(6, 42));
        scpProjects.setPreferredSize(new java.awt.Dimension(14, 42));

        treProjects.setFont(new java.awt.Font("Ubuntu", 1, 16)); // NOI18N
        treProjects.setModel(new ProjectsTreeModel(null));
        treProjects.setCellRenderer(new ProjectsTreeCellRenderer());
        treProjects.setMaximumSize(new java.awt.Dimension(90, 32779));
        treProjects.setMinimumSize(new java.awt.Dimension(0, 30));
        treProjects.setPreferredSize(new java.awt.Dimension(0, 30));
        treProjects.setRootVisible(false);
        treProjects.setRowHeight(30);
        treProjects.setSelectionModel(null);
        treProjects.addTreeExpansionListener(new javax.swing.event.TreeExpansionListener() {
            public void treeExpanded(javax.swing.event.TreeExpansionEvent evt) {
                treeExpansion(evt);
            }
            public void treeCollapsed(javax.swing.event.TreeExpansionEvent evt) {
                treeExpansion(evt);
            }
        });
        scpProjects.setViewportView(treProjects);

        pnlProjects.add(scpProjects);

        pnlStatusAndProjects.add(pnlProjects);

        pnlManagement.add(pnlStatusAndProjects);

        pnlBlank.setBackground(new java.awt.Color(255, 255, 255));
        pnlBlank.setMinimumSize(new java.awt.Dimension(0, 0));
        pnlBlank.setOpaque(false);
        pnlBlank.setPreferredSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout pnlBlankLayout = new javax.swing.GroupLayout(pnlBlank);
        pnlBlank.setLayout(pnlBlankLayout);
        pnlBlankLayout.setHorizontalGroup(
            pnlBlankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 342, Short.MAX_VALUE)
        );
        pnlBlankLayout.setVerticalGroup(
            pnlBlankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 86, Short.MAX_VALUE)
        );

        pnlManagement.add(pnlBlank);

        scpManagement.setViewportView(pnlManagement);

        scpDevelopers.setBackground(new java.awt.Color(255, 255, 255));
        scpDevelopers.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        scpDevelopers.setPreferredSize(new java.awt.Dimension(0, 0));

        tblEmployee.setAutoCreateRowSorter(true);
        tblEmployee.setModel(new devfortress.view.models.EmployeeTableModel());
        tblEmployee.setRowHeight(30);
        tblEmployee.setRowSelectionAllowed(false);
        scpDevelopers.setViewportView(tblEmployee);

        pnlLogAndControl.setPreferredSize(new java.awt.Dimension(0, 120));

        scpLogPane.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        txaLog.setEditable(false);
        txaLog.setColumns(20);
        txaLog.setRows(5);
        txaLog.setToolTipText("Log messages");
        scpLogPane.setViewportView(txaLog);

        sppControl.setBackground(new java.awt.Color(255, 255, 255));
        sppControl.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        sppControl.setDividerLocation(180);
        sppControl.setDividerSize(3);
        sppControl.setEnabled(false);
        sppControl.setPreferredSize(new java.awt.Dimension(0, 0));

        pnlSystemControl.setBackground(new java.awt.Color(255, 255, 255));

        btnInformation.setFont(new java.awt.Font("Ubuntu", 1, 13)); // NOI18N
        btnInformation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/devfortress/view/resources/icInformation.png"))); // NOI18N
        btnInformation.setText(Constant.BUTTON_INFORMATION);

        btnCurrentProjects.setFont(new java.awt.Font("Ubuntu", 1, 13)); // NOI18N
        btnCurrentProjects.setIcon(new javax.swing.ImageIcon(getClass().getResource("/devfortress/view/resources/icProjects.png"))); // NOI18N
        btnCurrentProjects.setText(Constant.BUTTTON_CURRENT_PROJECTS);

        javax.swing.GroupLayout pnlSystemControlLayout = new javax.swing.GroupLayout(pnlSystemControl);
        pnlSystemControl.setLayout(pnlSystemControlLayout);
        pnlSystemControlLayout.setHorizontalGroup(
            pnlSystemControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSystemControlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSystemControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnInformation, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                    .addComponent(btnCurrentProjects, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlSystemControlLayout.setVerticalGroup(
            pnlSystemControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSystemControlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnInformation, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCurrentProjects, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        sppControl.setLeftComponent(pnlSystemControl);

        pnlTurnControl.setBackground(new java.awt.Color(255, 255, 255));

        btnNextTurn.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        btnNextTurn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/devfortress/view/resources/icNextTurn.png"))); // NOI18N
        btnNextTurn.setText(Constant.BUTTON_NEXT_TURN);

        javax.swing.GroupLayout pnlTurnControlLayout = new javax.swing.GroupLayout(pnlTurnControl);
        pnlTurnControl.setLayout(pnlTurnControlLayout);
        pnlTurnControlLayout.setHorizontalGroup(
            pnlTurnControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTurnControlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNextTurn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlTurnControlLayout.setVerticalGroup(
            pnlTurnControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTurnControlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNextTurn, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addContainerGap())
        );

        sppControl.setRightComponent(pnlTurnControl);

        javax.swing.GroupLayout pnlLogAndControlLayout = new javax.swing.GroupLayout(pnlLogAndControl);
        pnlLogAndControl.setLayout(pnlLogAndControlLayout);
        pnlLogAndControlLayout.setHorizontalGroup(
            pnlLogAndControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLogAndControlLayout.createSequentialGroup()
                .addComponent(scpLogPane, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(sppControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlLogAndControlLayout.setVerticalGroup(
            pnlLogAndControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sppControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(scpLogPane)
        );

        menu.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        menuFile.setText("File");

        menuFile_Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        menuFile_Exit.setText("Exit");
        menuFile.add(menuFile_Exit);

        menu.add(menuFile);

        menuEdit.setText("Edit");

        menuEdit_Preferences.setText("Preferences");
        menuEdit.add(menuEdit_Preferences);

        menu.add(menuEdit);

        menuView.setText("View");

        menuView_Summary.setText("Summary");
        menuView.add(menuView_Summary);

        menu.add(menuView);

        menuHelp.setText("Help");

        menuHelp_About.setText("About");
        menuHelp.add(menuHelp_About);

        menu.add(menuHelp);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(scpManagement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scpDevelopers, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlLogAndControl, javax.swing.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE)))
            .addComponent(pnlStatusBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scpDevelopers, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(pnlLogAndControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scpManagement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(pnlStatusBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Setup component display.
     */
    @Override
    public void setUpDisplay() {
        /* Fix background problem of developers scroll pane. */
        scpDevelopers.getViewport().setBackground(Color.white);

        /* Setup developers table. */
        tblEmployee.setDefaultRenderer(JButton.class,
                new TableButtonCellRenderer());
        tblEmployee.setDefaultEditor(JButton.class,
                new TableButtonCellEditor(new JCheckBox(),
                employeeTableButtonListener));
    }

    /**
     * Populate data for DevFortressView.
     */
    private void populateData() {
        /* Update Status panel. */
        DateTime duration = model.getCurrentTimePlayed();
        lblDuration.setText(String.format("%s: Y%d M%d W%d", Constant.DURATION,
                duration.getYear(), duration.getMonthOfYear(),
                duration.getWeekOfMonth()));
        lblBudget.setText(String.format("%s: $%.2f", Constant.BUDGET,
                model.getBudget()));
        ExpensesTreeModel treExpensesModel =
                (ExpensesTreeModel) treExpenses.getModel();
        treExpensesModel.setTotalExpense(model.getExpenses());
        treExpensesModel.setSalaries(model.getTotalSalary());
        treExpensesModel.setItemExpense(model.getItemExpenses());
        treExpensesModel.setExpenseItems(model.getItems());
        treExpensesModel.reload();
        lblEmployees.setText(String.format("%s: %d", Constant.EMPLOYEES,
                model.getEmployeeList().size()));

        /* Update Projects panel. */
        ProjectsTreeModel treProjectsModel =
                (ProjectsTreeModel) treProjects.getModel();
        treProjectsModel.setProjects(model.getProjectList());
        treProjectsModel.reload();

        /* Update Developers table. */
        EmployeeTableModel tblDevelopersModel =
                (EmployeeTableModel) tblEmployee.getModel();
        tblDevelopersModel.setEmployeeList(model.getEmployeeList());

        /* Fix overstretch problem of Management panel. */
        pnlManagement.setSize(0, 0);

        /* Adjust sizes of Management panel and its child components. */
        treeExpansion(null);
    }

    /**
     * Resize container panels of the trees to fit their contents.
     */
    private void treeExpansion(javax.swing.event.TreeExpansionEvent evt) {//GEN-FIRST:event_treeExpansion
        /* Get required components' sizes. */
        Dimension pnlManagementSize = pnlManagement.getSize(),
                pnlStatusSize = pnlStatus.getSize(),
                pnlProjectsSize = pnlProjects.getSize(),
                scpExpensesViewportSize = scpExpenses.getViewport().getSize(),
                scpProjectsViewportSize = scpProjects.getViewport().getSize(),
                scpManagementViewportSize = scpManagement.getViewport().getSize(),
                pnlBlankSize = pnlBlank.getSize();

        /* Declare and define size increment for each panel including a tree. */
        int pnlStatusSizeIncrement, pnlProjectsSizeIncrement,
                pnlManagementSizeIncrement;
        pnlStatusSizeIncrement = (treExpenses.getRowCount()
                * treExpenses.getRowHeight()) - scpExpensesViewportSize.height;
        if (pnlManagementSize.height == 0) {
            pnlStatusSizeIncrement += treExpenses.getRowHeight() * 0.5;
        }
        pnlProjectsSizeIncrement = (treProjects.getRowCount()
                + ((treProjects.getRowCount() == 0) ? 1 : 0))
                * treProjects.getRowHeight() - scpProjectsViewportSize.height;
        pnlManagementSizeIncrement = pnlStatusSizeIncrement
                + pnlProjectsSizeIncrement;

        /* Adjust size increments based on total size increment. */
        if (pnlManagementSizeIncrement > 0) {
            /* If size is to be accumulated, recalculate pnlBlank's size and
             * total size increment.
             */
            if (pnlBlankSize.height > pnlManagementSizeIncrement) {
                pnlBlankSize.height -= pnlManagementSizeIncrement;
                pnlManagementSizeIncrement = 0;
            } else {
                pnlManagementSizeIncrement -= pnlBlankSize.height;
                pnlBlankSize.height = 0;
            }
        } else {
            /* Else, check current size of scrollable content. */
            if (pnlManagementSize.height > scpManagementViewportSize.height) {
                /* If content is oversized, recalculate pnlBlank's size. */
                if (pnlManagementSize.height + pnlManagementSizeIncrement
                        < scpManagementViewportSize.height) {
                    pnlBlankSize.height = scpManagementViewportSize.height
                            - pnlManagementSize.height - pnlManagementSizeIncrement;
                }
            } else {
                pnlBlankSize.height -= pnlManagementSizeIncrement;
            }
        }

        /* Update panel's sizes. */
        pnlManagementSize.height += pnlManagementSizeIncrement;
        pnlStatusSize.height += pnlStatusSizeIncrement;
        pnlProjectsSize.height += pnlProjectsSizeIncrement;

        /* Adjust panels' sizes according to scrolling condition. */
        if (pnlManagementSize.height > scpManagementViewportSize.height) {
            /* If scroll is enabled, update any panel that has change. */
            pnlBlankSize.height = 0;
            if (pnlStatusSizeIncrement != 0) {
                pnlStatus.setSize(pnlStatusSize);
                pnlStatus.setPreferredSize(pnlStatusSize);
            }
            if (pnlProjectsSizeIncrement != 0) {
                pnlProjects.setSize(pnlProjectsSize);
                pnlProjects.setPreferredSize(pnlProjectsSize);
            }
        } else {
            /* If scroll is disabled, decide which panel to update first. */
            if (pnlStatusSizeIncrement < pnlProjectsSizeIncrement) {
                pnlStatus.setSize(pnlStatusSize);
                pnlStatus.setPreferredSize(pnlStatusSize);
                if (pnlProjectsSizeIncrement != 0) {
                    pnlProjects.setSize(pnlProjectsSize);
                    pnlProjects.setPreferredSize(pnlProjectsSize);
                }
            } else {
                pnlProjects.setSize(pnlProjectsSize);
                pnlProjects.setPreferredSize(pnlProjectsSize);
                if (pnlStatusSizeIncrement != 0) {
                    pnlStatus.setSize(pnlStatusSize);
                    pnlStatus.setPreferredSize(pnlStatusSize);
                }
            }
        }

        /* Update root panel and its filler panel. */
        pnlBlank.setSize(pnlBlankSize);
        pnlBlank.setPreferredSize(pnlBlankSize);
        pnlManagement.setSize(pnlManagementSize);
        pnlManagement.setPreferredSize(pnlManagementSize);

        /* Revalidate the frame layout. */
        revalidate();
    }//GEN-LAST:event_treeExpansion
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCurrentProjects;
    private javax.swing.JButton btnInformation;
    private javax.swing.JButton btnNextTurn;
    private javax.swing.JButton btnSystem;
    private javax.swing.JLabel lblBudget;
    private javax.swing.JLabel lblDuration;
    private javax.swing.JLabel lblEmployees;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenuItem menuEdit_Preferences;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuFile_Exit;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenuItem menuHelp_About;
    private javax.swing.JMenu menuView;
    private javax.swing.JMenuItem menuView_Summary;
    private javax.swing.JPanel pnlBlank;
    private javax.swing.JPanel pnlBudget;
    private javax.swing.JPanel pnlDuration;
    private javax.swing.JPanel pnlEmployees;
    private javax.swing.JPanel pnlLogAndControl;
    private javax.swing.JPanel pnlManagement;
    private javax.swing.JPanel pnlProjects;
    private javax.swing.JPanel pnlStatus;
    private javax.swing.JPanel pnlStatusAndProjects;
    private javax.swing.JPanel pnlStatusBar;
    private javax.swing.JPanel pnlSystemButtonHolder;
    private javax.swing.JPanel pnlSystemControl;
    private javax.swing.JPanel pnlTurnControl;
    private javax.swing.Box.Filler rigidArea1;
    private javax.swing.Box.Filler rigidArea2;
    private javax.swing.JScrollPane scpDevelopers;
    private javax.swing.JScrollPane scpExpenses;
    private javax.swing.JScrollPane scpLogPane;
    private javax.swing.JScrollPane scpManagement;
    private javax.swing.JScrollPane scpProjects;
    private javax.swing.JSplitPane sppControl;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTree treExpenses;
    private javax.swing.JTree treProjects;
    private javax.swing.JTextArea txaLog;
    // End of variables declaration//GEN-END:variables

    /**
     * Update data and logs.
     *
     * @param o
     * @param arg
     */
    @Override
    public void update(Observable o, Object arg) {
        /* Populate data. */
        populateData();

        /* Update Log text area. */
        txaLog.append(arg.toString() + "\n");
    }

    /**
     * Add button listener for main screen.
     *
     * @param buttonListener
     */
    @Override
    public void addButtonListener(ActionListener buttonListener) {
        btnSystem.addActionListener(buttonListener);
        btnInformation.addActionListener(buttonListener);
        btnCurrentProjects.addActionListener(buttonListener);
        btnNextTurn.addActionListener(buttonListener);
    }

    /**
     * Add button listener for Employee table.
     *
     * @param employeeTableButtonListener
     */
    @Override
    public void addEmployeeTableButtonListener(ActionListener employeeTableButtonListener) {
        this.employeeTableButtonListener = employeeTableButtonListener;
    }
}
